{"uid":"d34c9114ee50aadc","name":"test_paging_limits[51]","fullName":"DummyAPI.TestPaging#test_paging_limits","historyId":"1b2d0620e61269186ca0fc97092aba1d","time":{"start":1681596772402,"stop":1681596772582,"duration":180},"status":"skipped","statusMessage":"XFAIL\n\nAssertionError: Неверный лимит. Получен 50 вместо 51\n  \nassert 50 == 51\n +  where 50 = <built-in method get of dict object at 0x7f56d41fe600>('limit')\n +    where <built-in method get of dict object at 0x7f56d41fe600> = {'data': [{'firstName': 'Sara', 'id': '60d0fe4f5311236168a109ca', 'lastName': 'Andersen', 'picture': 'https://randomus...a', 'picture': 'https://randomuser.me/api/portraits/med/women/5.jpg', ...}, ...], 'limit': 50, 'page': 0, 'total': 239}.get\n +      where {'data': [{'firstName': 'Sara', 'id': '60d0fe4f5311236168a109ca', 'lastName': 'Andersen', 'picture': 'https://randomus...a', 'picture': 'https://randomuser.me/api/portraits/med/women/5.jpg', ...}, ...], 'limit': 50, 'page': 0, 'total': 239} = <bound method Response.json of <Response [200]>>()\n +        where <bound method Response.json of <Response [200]>> = <Response [200]>.json","statusTrace":"limit = 51\n\n    @staticmethod\n    @pytest.mark.parametrize(\"limit\",\n                             [pytest.param(limit_list[0], marks=pytest.mark.xfail),\n                              *limit_list[1:-1],\n                              pytest.param(limit_list[-1], marks=pytest.mark.xfail)])\n    def test_paging_limits(limit):\n        limit_url = base_url + f'user?limit={limit}'\n        response = requests.get(limit_url, headers=headers)\n>       Check.limit(response, limit)\n\nDummyAPI.py:55: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [200]>, limit = 51\n\n    @staticmethod\n    def limit(response: object, limit: int):\n>       assert response.json().get('limit') == limit, \\\n            f'Неверный лимит. Получен {response.json().get(\"limit\")} вместо {limit}\\n'\nE       AssertionError: Неверный лимит. Получен 50 вместо 51\nE         \nE       assert 50 == 51\nE        +  where 50 = <built-in method get of dict object at 0x7f56d41fe600>('limit')\nE        +    where <built-in method get of dict object at 0x7f56d41fe600> = {'data': [{'firstName': 'Sara', 'id': '60d0fe4f5311236168a109ca', 'lastName': 'Andersen', 'picture': 'https://randomus...a', 'picture': 'https://randomuser.me/api/portraits/med/women/5.jpg', ...}, ...], 'limit': 50, 'page': 0, 'total': 239}.get\nE        +      where {'data': [{'firstName': 'Sara', 'id': '60d0fe4f5311236168a109ca', 'lastName': 'Andersen', 'picture': 'https://randomus...a', 'picture': 'https://randomuser.me/api/portraits/med/women/5.jpg', ...}, ...], 'limit': 50, 'page': 0, 'total': 239} = <bound method Response.json of <Response [200]>>()\nE        +        where <bound method Response.json of <Response [200]>> = <Response [200]>.json\n\nDummyAPI.py:40: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"tag","value":"@pytest.mark.xfail"},{"name":"suite","value":"DummyAPI"},{"name":"subSuite","value":"TestPaging"},{"name":"host","value":"fv-az354-599"},{"name":"thread","value":"2339-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"DummyAPI"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"limit","value":"51"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"tags":["@pytest.mark.xfail"]},"source":"d34c9114ee50aadc.json","parameterValues":["51"]}