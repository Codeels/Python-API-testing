{"uid":"de58ea68a8534b08","name":"test_paging_limits[4]","fullName":"DummyAPI.TestPaging#test_paging_limits","historyId":"542a1ac40cd6f6f189cfed57e51c971e","time":{"start":1681596771041,"stop":1681596771416,"duration":375},"status":"skipped","statusMessage":"XFAIL\n\nAssertionError: Неверный лимит. Получен 5 вместо 4\n  \nassert 5 == 4\n +  where 5 = <built-in method get of dict object at 0x7f56d41fe080>('limit')\n +    where <built-in method get of dict object at 0x7f56d41fe080> = {'data': [{'firstName': 'Sara', 'id': '60d0fe4f5311236168a109ca', 'lastName': 'Andersen', 'picture': 'https://randomus... 'Droste', 'picture': 'https://randomuser.me/api/portraits/med/men/83.jpg', ...}], 'limit': 5, 'page': 0, 'total': 239}.get\n +      where {'data': [{'firstName': 'Sara', 'id': '60d0fe4f5311236168a109ca', 'lastName': 'Andersen', 'picture': 'https://randomus... 'Droste', 'picture': 'https://randomuser.me/api/portraits/med/men/83.jpg', ...}], 'limit': 5, 'page': 0, 'total': 239} = <bound method Response.json of <Response [200]>>()\n +        where <bound method Response.json of <Response [200]>> = <Response [200]>.json","statusTrace":"limit = 4\n\n    @staticmethod\n    @pytest.mark.parametrize(\"limit\",\n                             [pytest.param(limit_list[0], marks=pytest.mark.xfail),\n                              *limit_list[1:-1],\n                              pytest.param(limit_list[-1], marks=pytest.mark.xfail)])\n    def test_paging_limits(limit):\n        limit_url = base_url + f'user?limit={limit}'\n        response = requests.get(limit_url, headers=headers)\n>       Check.limit(response, limit)\n\nDummyAPI.py:55: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [200]>, limit = 4\n\n    @staticmethod\n    def limit(response: object, limit: int):\n>       assert response.json().get('limit') == limit, \\\n            f'Неверный лимит. Получен {response.json().get(\"limit\")} вместо {limit}\\n'\nE       AssertionError: Неверный лимит. Получен 5 вместо 4\nE         \nE       assert 5 == 4\nE        +  where 5 = <built-in method get of dict object at 0x7f56d41fe080>('limit')\nE        +    where <built-in method get of dict object at 0x7f56d41fe080> = {'data': [{'firstName': 'Sara', 'id': '60d0fe4f5311236168a109ca', 'lastName': 'Andersen', 'picture': 'https://randomus... 'Droste', 'picture': 'https://randomuser.me/api/portraits/med/men/83.jpg', ...}], 'limit': 5, 'page': 0, 'total': 239}.get\nE        +      where {'data': [{'firstName': 'Sara', 'id': '60d0fe4f5311236168a109ca', 'lastName': 'Andersen', 'picture': 'https://randomus... 'Droste', 'picture': 'https://randomuser.me/api/portraits/med/men/83.jpg', ...}], 'limit': 5, 'page': 0, 'total': 239} = <bound method Response.json of <Response [200]>>()\nE        +        where <bound method Response.json of <Response [200]>> = <Response [200]>.json\n\nDummyAPI.py:40: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"tag","value":"@pytest.mark.xfail"},{"name":"suite","value":"DummyAPI"},{"name":"subSuite","value":"TestPaging"},{"name":"host","value":"fv-az354-599"},{"name":"thread","value":"2339-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"DummyAPI"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"limit","value":"4"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"tags":["@pytest.mark.xfail"]},"source":"de58ea68a8534b08.json","parameterValues":["4"]}