{"uid":"8aa604c9ec0d17aa","name":"test_paging_pages[1000]","fullName":"DummyAPI.TestPaging#test_paging_pages","historyId":"0eb4af10d4877b97dda9c2b2c6f45423","time":{"start":1681596773993,"stop":1681596774170,"duration":177},"status":"skipped","statusMessage":"XFAIL\n\nAssertionError: Неверная страница. Получена 999 вместо 1000\n  \nassert 999 == 1000\n +  where 999 = <built-in method get of dict object at 0x7f56d417e340>('page')\n +    where <built-in method get of dict object at 0x7f56d417e340> = {'data': [], 'limit': 20, 'page': 999, 'total': 239}.get\n +      where {'data': [], 'limit': 20, 'page': 999, 'total': 239} = <bound method Response.json of <Response [200]>>()\n +        where <bound method Response.json of <Response [200]>> = <Response [200]>.json","statusTrace":"page = 1000\n\n    @staticmethod\n    @pytest.mark.parametrize(\"page\",\n                             [pytest.param(pages_list[0], marks=pytest.mark.xfail),\n                              *pages_list[1:-1],\n                              pytest.param(pages_list[-1], marks=pytest.mark.xfail)])\n    def test_paging_pages(page):\n        page_url = base_url + f'user?page={page}'\n        response = requests.get(page_url, headers=headers)\n>       Check.page(response, page)\n\nDummyAPI.py:65: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [200]>, page = 1000\n\n    @staticmethod\n    def page(response: object, page: int):\n>       assert response.json().get('page') == page, \\\n            f'Неверная страница. Получена {response.json().get(\"page\")} вместо {page}\\n'\nE       AssertionError: Неверная страница. Получена 999 вместо 1000\nE         \nE       assert 999 == 1000\nE        +  where 999 = <built-in method get of dict object at 0x7f56d417e340>('page')\nE        +    where <built-in method get of dict object at 0x7f56d417e340> = {'data': [], 'limit': 20, 'page': 999, 'total': 239}.get\nE        +      where {'data': [], 'limit': 20, 'page': 999, 'total': 239} = <bound method Response.json of <Response [200]>>()\nE        +        where <bound method Response.json of <Response [200]>> = <Response [200]>.json\n\nDummyAPI.py:34: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"tag","value":"@pytest.mark.xfail"},{"name":"suite","value":"DummyAPI"},{"name":"subSuite","value":"TestPaging"},{"name":"host","value":"fv-az354-599"},{"name":"thread","value":"2339-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"DummyAPI"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"page","value":"1000"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"tags":["@pytest.mark.xfail"]},"source":"8aa604c9ec0d17aa.json","parameterValues":["1000"]}